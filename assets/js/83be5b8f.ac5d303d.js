(self.webpackChunkrdfshape_api_webdocs=self.webpackChunkrdfshape_api_webdocs||[]).push([[959],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=r.createContext({}),p=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=p(t.components);return r.createElement(s.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,s=t.parentName,c=u(t,["components","mdxType","originalType","parentName"]),d=p(n),f=i,m=d["".concat(s,".").concat(f)]||d[f]||l[f]||a;return n?r.createElement(m,o(o({ref:e},c),{},{components:n})):r.createElement(m,o({ref:e},c))}));function f(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=d;var u={};for(var s in e)hasOwnProperty.call(e,s)&&(u[s]=e[s]);u.originalType=t,u.mdxType="string"==typeof t?t:i,o[1]=u;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3796:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return l}});var r=n(2122),i=n(9756),a=(n(7294),n(3905)),o=["components"],u={id:"testing-auditing_munit",title:"Unit tests with Munit"},s={unversionedId:"api-testing-auditing/testing-auditing_munit",id:"api-testing-auditing/testing-auditing_munit",isDocsHomePage:!1,title:"Unit tests with Munit",description:"RDFShape API comes with some built-in unit tests written with munit. These are used",source:"@site/../rdfshape-docs/target/mdoc/api-testing-auditing/testing-auditing_munit.md",sourceDirName:"api-testing-auditing",slug:"/api-testing-auditing/testing-auditing_munit",permalink:"/rdfshape-api/docs/api-testing-auditing/testing-auditing_munit",version:"current",frontMatter:{id:"testing-auditing_munit",title:"Unit tests with Munit"},sidebar:"docsSidebar",previous:{title:"Example API requests",permalink:"/rdfshape-api/docs/api-usage/usage_examples"},next:{title:"Integration tests and other",permalink:"/rdfshape-api/docs/api-testing-auditing/testing-auditing_integration"}},p=[],c={toc:p};function l(t){var e=t.components,n=(0,i.Z)(t,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"RDFShape API comes with some built-in unit tests written with ",(0,a.kt)("a",{parentName:"p",href:"https://scalameta.org/munit/"},"munit"),". These are used\ninternally for basic testing."),(0,a.kt)("p",null,"You can run the tests by running ",(0,a.kt)("inlineCode",{parentName:"p"},"sbt test")," or simply ",(0,a.kt)("inlineCode",{parentName:"p"},"test")," from the SBT shell."))}l.isMDXComponent=!0}}]);